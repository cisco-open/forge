---
# ------------------------------------------------------------------------------
# Various tricks to make sure apt isn't causing a race condition in the
# background.
- name: Disable periodic updates
  block:
    - name: Set all periodic update options to 0
      ansible.builtin.replace:
        path: /etc/apt/apt.conf.d/10periodic
        regexp: "1"
        replace: "0"

    - name: Set all auto update options to 0
      ansible.builtin.replace:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: "1"
        replace: "0"

    - name: Disable unattended upgrades
      ansible.builtin.lineinfile:
        path: /etc/apt/apt.conf.d/10periodic
        regexp: "^APT::Periodic::Unattended-Upgrade"
        line: 'APT::Periodic::Unattended-Upgrade "0";'
        create: true
      ignore_errors: true

    - name: Stop apt-daily.* systemd services
      ansible.builtin.service:
        name: "{{ item }}"
        state: stopped
      with_items:
        - unattended-upgrades
        - apt-daily
        - apt-daily.timer
        - apt-daily-upgrade
        - apt-daily-upgrade.timer

    - name: Disable apt-daily.* systemd services
      ansible.builtin.systemd:
        name: "{{ service }}"
        enabled: false
        masked: true
      with_items:
        - apt-daily.service
        - apt-daily.timer
        - apt-daily-upgrade.service
        - apt-daily-upgrade.timer
      loop_control:
        loop_var: service

    - name: Uninstall unattended upgrades
      ansible.builtin.apt:
        name: unattended-upgrades
        state: absent

    - name: Prevent unattended upgrades from being installed
      ansible.builtin.dpkg_selections:
        name: unattended-upgrades
        selection: hold

    - name: Wait for APT lock to be released
      ansible.builtin.shell: |
        while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1 || sudo fuser /var/lib/apt/lists/lock >/dev/null 2>&1 || sudo fuser /var/cache/apt/archives/lock >/dev/null 2>&1; do
          echo "Waiting for APT locks to be released..."
          sleep 5
        done
      args:
        executable: /bin/bash
      changed_when: false

    - name: Remove apt lock file
      ansible.builtin.file:
        state: absent
        path: "/var/lib/dpkg/lock"

- name: Update APT Cache
  ansible.builtin.apt:
    update_cache: true
    force_apt_get: true

- name: Dist upgrade
  ansible.builtin.apt:
    upgrade: dist
    state: latest
    update_cache: true
    cache_valid_time: 600

# ------------------------------------------------------------------------------
- name: Install various dependencies via apt.
  ansible.builtin.apt:
    pkg:
      - build-essential               # Compiler, linker, essential build tools
      - curl                          # HTTP client
      - git                           # Source control
      - jq                            # JSON parsing in scripts
      - yq                            # YAML processor
      - unzip                         # Extract ZIP archives
      - wget                          # Download files
      - zip                           # Create ZIP archives
      - xz-utils                      # For .xz compression
      - python3                       # Python runtime
      - python3-pip                   # Python package installer
      - python3-venv                  # Virtual environments
      - python3-openssl               # TLS support for Python
      - python3-packaging             # Python packaging utilities
      - iptables                      # Network packet filtering
      - libvirt-clients               # Libvirt VM management CLI
      - libvirt-daemon-system         # Libvirt daemon system components
      - qemu-kvm                      # KVM virtualization
      - fuse-overlayfs                # Container overlay support
      - amazon-ecr-credential-helper  # AWS ECR credential helper
